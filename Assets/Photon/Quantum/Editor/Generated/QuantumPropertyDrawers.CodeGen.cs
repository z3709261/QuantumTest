// <auto-generated>
// This code was auto-generated by a tool, every time
// the tool executes this code will be reset.
// </auto-generated>

namespace Quantum.Editor {
  using Quantum;
  using UnityEngine;
  using UnityEditor;

  [CustomPropertyDrawer(typeof(AssetRefCustomAnimatorBehaviour))]
  public class AssetRefCustomAnimatorBehaviourPropertyDrawer : PropertyDrawer {
    public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) {
      AssetRefDrawer.DrawAssetRefSelector(position, property, label, typeof(CustomAnimatorBehaviourAsset));
    }
  }

  [CustomPropertyDrawer(typeof(AssetRefCustomAnimatorGraph))]
  public class AssetRefCustomAnimatorGraphPropertyDrawer : PropertyDrawer {
    public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) {
      AssetRefDrawer.DrawAssetRefSelector(position, property, label, typeof(CustomAnimatorGraphAsset));
    }
  }

  [CustomPropertyDrawer(typeof(AssetRefGameAnimatorState))]
  public class AssetRefGameAnimatorStatePropertyDrawer : PropertyDrawer {
    public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) {
      AssetRefDrawer.DrawAssetRefSelector(position, property, label, typeof(GameAnimatorStateAsset));
    }
  }

  [CustomPropertyDrawer(typeof(AssetRefRoundConfig))]
  public class AssetRefRoundConfigPropertyDrawer : PropertyDrawer {
    public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) {
      AssetRefDrawer.DrawAssetRefSelector(position, property, label, typeof(RoundConfigAsset));
    }
  }

  [CustomPropertyDrawer(typeof(AssetRefSceneObjAnimationClip))]
  public class AssetRefSceneObjAnimationClipPropertyDrawer : PropertyDrawer {
    public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) {
      AssetRefDrawer.DrawAssetRefSelector(position, property, label, typeof(SceneObjAnimationClipAsset));
    }
  }

  [CustomPropertyDrawer(typeof(Quantum.Prototypes.EnumPlayerState_Prototype))]
  public class PrototypeDrawer_EnumPlayerState_Prototype : PrototypeDrawer {
  }

  [CustomPropertyDrawer(typeof(Quantum.Prototypes.RoundState_Prototype))]
  public class PrototypeDrawer_RoundState_Prototype : PrototypeDrawer {
  }

  [CustomPropertyDrawer(typeof(Quantum.Prototypes.SecondRoundState_Prototype))]
  public class PrototypeDrawer_SecondRoundState_Prototype : PrototypeDrawer {
  }

  [CustomPropertyDrawer(typeof(Quantum.Prototypes.InputButtons_Prototype))]
  public class PrototypeDrawer_InputButtons_Prototype : PrototypeDrawer {
  }
}
