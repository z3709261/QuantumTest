// <auto-generated>
// This code was auto-generated by a tool, every time
// the tool executes this code will be reset.
// </auto-generated>

using System;
namespace Quantum.Prototypes.Unity {
  [System.SerializableAttribute()]
  [Quantum.Prototypes.PrototypeAttribute(typeof(Quantum.HitBox))]
  public class HitBox_Prototype : Quantum.PrototypeAdapter<Quantum.Prototypes.HitBox_Prototype> {
    [Quantum.LocalReference]
    public global::EntityPrototype attacker;
    public System.Int32 frameIndex;
    public Photon.Deterministic.FPBounds3 bound;
    public Quantum.QBoolean IsActive;

    public sealed override Quantum.Prototypes.HitBox_Prototype Convert(EntityPrototypeConverter converter) {
      var result = new Quantum.Prototypes.HitBox_Prototype();
      converter.Convert(this.attacker, out result.attacker);
      result.frameIndex = this.frameIndex;
      result.bound = this.bound;
      result.IsActive = this.IsActive;
      return result;
    }
  }

}
